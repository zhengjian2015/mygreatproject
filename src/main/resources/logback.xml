<?xml version="1.0" encoding="UTF-8"?>

<!--slf4j 是规范/接口
  	日志实现 log4j,logback,common-logging
  	使用：slf4j+logback
-->
<configuration debug="false">
	<!--定义日志文件的存储地址 勿在 LogBack 的配置中使用相对路径 -->

	<property resource="config.properties" />
	<!-- 控制台输出 -->
	<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符 -->
			<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} -%msg%n</pattern>
		</encoder>
	</appender>


	<!-- 按文件大小区分的滚动日志 -->
	<appender name="ALL-OUT" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${log.path}/my-great.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
			<!-- rollover daily -->
			<fileNamePattern>${log.path}/my-great-%d{yyyy-MM-dd}.%i.txt</fileNamePattern>
			<maxFileSize>10MB</maxFileSize>
			<maxHistory>60</maxHistory>
			<totalSizeCap>500MB</totalSizeCap>
		</rollingPolicy>
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
		</encoder>
	</appender>

	
	
	<!-- 按照每天生成日志文件 -->
	<appender name="INFO-OUT" class="ch.qos.logback.core.rolling.RollingFileAppender">
	
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!--日志文件输出的文件名 -->
			<FileNamePattern>${log.path}/%d{yyyyMMdd}/my-great.%d{yyyy-MM-dd}.info.log</FileNamePattern>
			<!--日志文件保留天数 -->
			<MaxHistory>90</MaxHistory>
		</rollingPolicy>
		
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符 -->
			<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} -%msg%n</pattern>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
      <level>INFO</level>
      <onMatch>ACCEPT</onMatch>
      <onMismatch>DENY</onMismatch>
    </filter>
	</appender>

		<!-- 按照每天生成日志文件 -->
	<appender name="WARN-OUT" class="ch.qos.logback.core.rolling.RollingFileAppender">
	
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!--日志文件输出的文件名 -->
			<FileNamePattern>${log.path}/%d{yyyyMMdd}/my-great.%d{yyyy-MM-dd}.warn.log</FileNamePattern>
			<!--日志文件保留天数 -->
			<MaxHistory>90</MaxHistory>
		</rollingPolicy>
		
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符 -->
			<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} -%msg%n</pattern>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
      <level>WARN</level>
      <onMatch>ACCEPT</onMatch>
      <onMismatch>DENY</onMismatch>
    </filter>
	</appender>
	
	
	<appender name="ERROR-OUT" class="ch.qos.logback.core.rolling.RollingFileAppender">  
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">  
        <!--日志文件输出的文件名 -->
            <fileNamePattern>${log.path}/%d{yyyyMMdd}/my-great.%d{yyyy-MM-dd}.error.log</fileNamePattern>
            <!--日志文件保留天数 -->
			<MaxHistory>90</MaxHistory>
        </rollingPolicy>  
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} -
				%msg%n</pattern> 
        </encoder>  
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>  
            <onMatch>ACCEPT</onMatch>  
            <onMismatch>DENY</onMismatch>  
        </filter>  
    </appender>  


	<logger name="org.springframework" level="INFO" />
	<logger name="net.sf.ehcache" level="WARN" />
	<logger name="org.apache" level="INFO" />
	<logger name="org.quartz.core" level="INFO" />
	<logger name="org.springframework.web.servlet.view.JstlView" level="DEBUG" />
	<logger name="httpclient.wire.content" level="WARN" />
	<logger name="org.springframework.web.util.NestedServletException" level="FATAL" />



<!--JdbcTemplate的日志输出器
    <logger name="org.springframework.jdbc.core.StatementCreatorUtils"
        additivity="false" level="TRACE">
        <appender-ref ref="STDOUT" />
    </logger>
	<logger name="org.springframework.jdbc.core.springframework.jdbc.core.BeanPropertyRowMapper"
			additivity="false" level="TRACE">
		<appender-ref ref="STDOUT" />
	</logger>

    <logger name="org.springframework.jdbc.core" additivity="true">
        <level value="DEBUG" />
        <appender-ref ref="STDOUT" />
    </logger>
    <logger name="java.sql.Connection" additivity="true">
        <level value="DEBUG" />
        <appender-ref ref="STDOUT" />
    </logger>
    <logger name="java.sql.Statement" additivity="true">
        <level value="DEBUG" />
        <appender-ref ref="STDOUT" />
    </logger>
    <logger name="java.sql.PreparedStatement" additivity="true">
        <level value="DEBUG" />
        <appender-ref ref="STDOUT" />
    </logger>
    <logger name="java.sql.ResultSet" additivity="true">
        <level value="DEBUG" />
        <appender-ref ref="STDOUT" />
    </logger>
	<logger name="java.sql.ResultSet" additivity="true">
		<level value="DEBUG" />
		<appender-ref ref="STDOUT" />
	</logger>
	-->
    
	<!-- 日志输出级别 -->
	<root level="DEBUG">
		<appender-ref ref="STDOUT" />
		<appender-ref ref="ALL-OUT" />
		<appender-ref ref="INFO-OUT" />
		<appender-ref ref="WARN-OUT" />
		<appender-ref ref="ERROR-OUT" />
	</root>
	<!--日志异步到数据库 -->

</configuration>